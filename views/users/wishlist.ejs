<%-include("partials/header") %>

<style>
  body {
    background-color: #fff;
    font-family: Arial, sans-serif;
  }

  .wishlist-container {
    max-width: 1200px;
    margin: 50px auto;
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .wishlist-heading {
    text-align: center;
    margin-bottom: 30px;
    font-size: 2rem;
    font-weight: bold;
    color: #333;
  }

  .product-card {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 20px;
    margin-bottom: 20px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .product-card img {
    width: 120px;
    height: 120px;
    object-fit: cover;
    border-radius: 8px;
  }

  .product-details {
    flex: 1;
    margin-left: 20px;
  }

  .product-title {
    font-size: 1.2rem;
    font-weight: bold;
    color: #333;
  }

  .product-price {
    font-size: 1rem;
    color: #555;
    margin-top: 10px;
  }

  .remove-btn {
    background-color: #ff4d4d;
    color: #fff;
    border: none;
    padding: 10px 15px;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1rem;
  }

  .remove-btn:hover {
    background-color: #e60000;
  }

  .goToProduct:hover {
    color: #1b3ab8;
    text-decoration: underline;
  }
  .addToCartButton{
    background-color: rgb(103, 103, 234);
    color: #fff;
    border: none;
    padding: 10px 15px;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1rem;
  }
</style>


<div class="wishlist-container">
  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Home</a></li>
      <li class="breadcrumb-item"><a href="/users/wishlist">wishlist</a></li>
      
    </ol>
  </nav>
  <div class="wishlist-heading">Wishlist</div>

  <% if (products&& products.length>0 ) { %>
  <% products.forEach(product => { %>
  <div class="product-card">

    <img src="/<%= product.images[0] %>" alt="<%= product.name %>">
    <div class="product-details">
      <a href="/users/productDetails/<%=product._id %>" class="text-decoration-none ">
        <div class="product-title goToProduct"><%= product.name %></div>
      </a>
      <div class="product-price"><%= product.category %></div>
      <div class="product-price"><%= product.description %></div>
      <div class="product-price fw-bold">â‚¹<%= product.price %></div>
      <div class="product-size" id="size" data-size="<%=product.sizes[0].size %>">size : <%=product.sizes[0].size %></div>


    </div>
    <button id="addToCart" data-product-id="<%= product._id %>" class="btn addToCartButton mx-2 ">Add to Cart</button>
    <button class="remove-btn" onclick="removeItem('<%= product._id %>')">Remove</button>

  </div>
  <% }) %>
  <% } else { %>
  <p style="text-align: center; font-size: 1.2rem; color: #555;">Your wishlist is empty!</p>
  <% } %>
</div>

<script>
  async function removeItem(productId) {
    try {
      const response = await fetch("/users/removeItem", {
        method: "DELETE",
        headers: {
          "content-Type": "application/json"
        },
        body: JSON.stringify({
          productId
        })
      })
      console.log(response)
      const data = await response.json()
      if (response.ok) {
        swal.fire({
          icon: "success",
          title: "success",
          text: data.message
        }).then(() => location.reload())
      } else {
        swal.fire({
          icon: "error",
          title: "error",
          text: data.message || "error"
        })
      }

    } catch (error) {
      console.log(error, "error occured in removing item")
      swal.fire({
        icon: "error",
        title: "error",
        text: "some thing went wrong"
      })
    }
  }
</script>
<script>
    document.getElementById("addToCart").addEventListener("click", async () => {
  const productId = document.getElementById("addToCart").getAttribute("data-product-id");
  const sizeElement = document.getElementById("size").getAttribute("data-size")
  console.log(sizeElement)
  const selectedSize = sizeElement; 
  const quantity = 1;

  if (quantity <= 0) {
    return Swal.fire({
      icon: "warning",
      title: "Invalid Quantity",
      text: "Please select a valid quantity.",
    });
  }

  if (!selectedSize) {
    return Swal.fire({
      icon: "warning",
      title: "Invalid Size",
      text: "Please select a size before adding to the cart.",
    });
  }

  addToCart(productId, selectedSize, quantity);
});

async function addToCart(productId, size, quantity) {
  try {
    const stockResponse = await fetch(`/users/product/${productId}/size/${size}`);
    const stockData = await stockResponse.json();

    if (!stockResponse.ok) {
      return Swal.fire({
        icon: "error",
        title: "Stock Error",
        text: stockData.message || "Unable to fetch stock details.",
      });
    }

    const availableStock = stockData.stock; 
    console.log(`Available stock: ${availableStock}, Requested: ${quantity}`);

    if (quantity > availableStock) {
      return Swal.fire({
        icon: "warning",
        title: "Out of Stock",
        text: `Only ${availableStock} items are left for this size.`,
      });
    }

    
    const response = await fetch("/users/cart/add", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ productId, size, quantity }),
    });

    const data = await response.json();

    if (response.ok) {
      Swal.fire({
        icon: "success",
        title: "Added to Cart",
        text: data.message || "Product successfully added to your cart.",
      }).then(()=>location.reload())
    } else {
      Swal.fire({
        icon: "error",
        title: "Error",
        text: data.message || "Unable to add the product to the cart.",
      });
    }
  } catch (error) {
    console.error("Error adding product to cart:", error);
    Swal.fire({
      icon: "error",
      title: "Error",
      text: "An error occurred while adding the product to your cart.",
    });
  }
}
</script>

<%-include("partials/footer") %>