<%- include("partials/header") %>

<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/">Home</a></li>
    <li class="breadcrumb-item"><a href="/users/shop">Shop</a></li>
    <li class="breadcrumb-item active" aria-current="page"><%= product.name %></li>
  </ol>
</nav>

<div class="container-fluid mt-4">
  <div class="row d-flex align-items-start justify-content-between p-5">
    <!-- Thumbnail Gallery -->
    <div class="col-md-2 d-flex flex-column gap-2 align-items-start">
      <div class="thumbnail-gallery">
        <% product.images.forEach((image, index) => { %>
        <img src="/<%= image %>" alt="Thumbnail <%= index + 1 %>" class="thumbnail-image border rounded cursor-pointer" onclick="setMainImage('/<%= image %>')" style="width: 100px; height: 100px; object-fit: cover;">
        <% }); %>
      </div>
    </div>

    <!-- Main Image with Zoom -->
    <div class="col-md-5 position-relative">
      <div class="main-image-container d-flex justify-content-center align-items-center">
        <div class="zoom-container position-relative">
          <img id="mainImage" src="/<%= product.images[0] %>" alt="<%= product.name %>" class="img-fluid border rounded">
          <div id="zoomLens" class="zoom-lens"></div>
        </div>
        <div id="zoomResult" class="zoom-result border"></div>
      </div>
    </div>



    <!-- Product Details -->
    <div class="col-md-5">
      <div class="product-details">
        <!-- Wishlist Icon -->
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h1 class="product-name fw-bold"><%= product.name %></h1>
          <i class="bi bi-heart wishlist-icon fs-3 text-danger cursor-pointer border"></i>
        </div>

        <p class="product-description mb-4"><%= product.description %></p>
        <h4 class="product-price text-danger">â‚¹ <%= product.price.toFixed(2) %></h4>

        <div class="rating-reviews mb-4">
          <div class="d-flex align-items-center">
            <!-- Star Rating -->
            <div class="stars me-2">
              <% for (let i = 1; i <= 5; i++) { %>
              <% if (i <= 4.5) { %>
              <i class="fas fa-star text-warning"></i>
              <% } else if (i - 4.5 < 1) { %>
              <i class="fas fa-star-half-alt text-warning"></i>
              <% } else { %>
              <i class="far fa-star text-muted"></i>
              <% } %>
              <% } %>
            </div>
            <!-- Rating Count -->
            <span class="rating-count text-muted">(125 reviews)</span>
          </div>
        </div>

        <div class="mt-3">
          <label for="size">Choose Size:</label>
          <select id="size" name="size">
            <% product.sizes.forEach(size => { %>
            <option value="<%= size.size %>" data-stock="<%= size.stock %>">
              <%= size.size %>
            </option>
            <% }) %>
          </select>
        </div>


        <div class="mt-3">
          <div id="size-info" class="mt-3" style="display: none;">
            <div><strong>Size: <span id="selected-size"></span></strong></div>
            <div><strong>Stock: <span id="selected-stock"></span></strong></div>
          </div>
        </div>

        <div class="mt-3">
          <label for="quantity" class="form-label">Quantity:</label>
          <input type="number" id="quantity" name="quantity" class="form-control" value="1" min="1" max="<%= product.stock %>">
        </div>

       

        <div class="mt-3">
          <button id="addToCart" data-product-id="<%= product._id %>" class="btn btn-primary btn-lg w-100">Add to Cart</button>
        </div>
        <div class="coupon-section mt-4">
          <h4>Have a Coupon?</h4>
          <div class="d-flex">
            <input type="text" id="couponCode" class="form-control" placeholder="Enter Coupon Code" aria-label="Coupon Code">
            <button id="applyCoupon" class="btn btn-primary ms-2">Apply Coupon</button>
          </div>

          <div id="couponFeedback" class="mt-2 text-success" style="display:none;">
            Coupon Applied Successfully!
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<div class="row mt-5 p-5">
  <div class="col-md-6 reviews-section p-4">
    <h3>Customer Reviews</h3>
    <div class="d-flex flex-column gap-4">

      <div class="review card border-0 shadow-sm p-3">
        <div class="review-header d-flex align-items-center justify-content-between">
          <h5 class="reviewer-name fw-bold">John Doe</h5>
          <div class="stars">
            <i class="fas fa-star text-warning"></i>
            <i class="fas fa-star text-warning"></i>
            <i class="fas fa-star text-warning"></i>
            <i class="fas fa-star text-warning"></i>
            <i class="far fa-star text-muted"></i>
          </div>
        </div>
        <p class="review-text mt-2">"Amazing shoes! Very comfortable and stylish."</p>
      </div>

      <div class="review card border-0 shadow-sm p-3">
        <div class="review-header d-flex align-items-center justify-content-between">
          <h5 class="reviewer-name fw-bold">Jane Smith</h5>
          <div class="stars">
            <i class="fas fa-star text-warning"></i>
            <i class="fas fa-star text-warning"></i>
            <i class="fas fa-star text-warning"></i>
            <i class="far fa-star text-muted"></i>
            <i class="far fa-star text-muted"></i>
          </div>
        </div>
        <p class="review-text mt-2">"Good quality, but could be more durable."</p>
      </div>

      <div class="review card border-0 shadow-sm p-3">
        <div class="review-header d-flex align-items-center justify-content-between">
          <h5 class="reviewer-name fw-bold">Mark Wilson</h5>
          <div class="stars">
            <i class="fas fa-star text-warning"></i>
            <i class="fas fa-star text-warning"></i>
            <i class="fas fa-star-half-alt text-warning"></i>
            <i class="far fa-star text-muted"></i>
            <i class="far fa-star text-muted"></i>
          </div>
        </div>
        <p class="review-text mt-2">"Decent shoes, but the fit wasn't perfect."</p>
      </div>
    </div>
  </div>

  <div class="col-md-6 product-specifications-section p-4">
    <h3>Product Specifications</h3>
    <ul class="list-group">
      <li class="list-group-item"><strong>Material:</strong> Premium Leather</li>
      <li class="list-group-item"><strong>Build Quality:</strong> Durable and Flexible</li>
      <li class="list-group-item"><strong>Weight:</strong> Lightweight (500g per shoe)</li>
      <li class="list-group-item"><strong>Comfort Level:</strong> Extra Padded Sole</li>
      <li class="list-group-item"><strong>Weather Resistance:</strong> Water-Resistant</li>
      <li class="list-group-item"><strong>Color Options:</strong> Black, White, Navy Blue</li>
      <li class="list-group-item"><strong>Ideal For:</strong> Casual and Sportswear</li>
    </ul>
  </div>
</div>



<div class="related-products mt-5 p-5">
  <h3>Related Products</h3>
  <div class="d-flex flex-wrap gap-4 p-5">
    <% relatedProducts.forEach(product => { %>
    <a href="/users/shop">
      <div class="product-card card shadow-sm" style="width: 18rem;">
        <img src="/<%= product.images[0] %>" class="card-img-top" alt="<%= product.name %>">
        <div class="card-body">
          <h5 class="card-title"><%= product.name %></h5>
          <p class="card-text">$<%= product.price.toFixed(2) %></p>
          <a href="/users/productDetails/<%= product._id %>" class="btn btn-primary w-100">View Details</a>
        </div>
    </a>
  </div>
  <% }); %>
</div>
</div>
<style>
  .breadcrumb {
    background: none;
    padding: 0;
    margin-bottom: 20px;
    font-size: 0.9rem;
    margin-left: 20px;
  }

  .breadcrumb-item a {
    text-decoration: none;
    color: #007bff;
  }

  .breadcrumb-item.active {
    color: #6c757d;
    font-weight: bold;
  }


  .stars i {
    font-size: 1.2rem;
  }

  .rating-count {
    font-size: 0.9rem;
  }

  .rating-reviews {
    border-top: 1px solid #ddd;
    padding-top: 10px;
  }


  .related-products h3 {
    font-size: 1.5rem;
    font-weight: bold;
    margin-bottom: 20px;
  }

  .product-card {
    transition: transform 0.3s ease-in-out;
  }

  .product-card:hover {
    transform: scale(1.05);
  }

  .product-card img {
    height: 200px;
    object-fit: cover;
  }

  .card-body {
    text-align: center;
  }

  .card-title {
    font-size: 1rem;
    font-weight: 600;
  }

  .card-text {
    font-size: 1rem;
    color: #333;
  }

  .btn-primary {
    font-size: 0.9rem;
    padding: 8px 16px;
  }


  .zoom-container {
    position: relative;
    width: 100%;
    height: auto;
  }

  #mainImage {
    display: block;
    width: 100%;
    max-width: 500px;
    /* Centered and uniform size */
    height: auto;
    cursor: zoom-in;
  }

  .zoom-lens {
    position: absolute;
    border: 2px solid #000;
    width: 100px;
    height: 100px;
    opacity: 0.4;
    background: #fff;
    display: none;
    pointer-events: none;
  }

  .zoom-result {
    position: absolute;
    top: 0;
    left: 110%;
    width: 500px;
    /* Larger width for zoom result */
    height: 500px;
    /* Larger height for zoom result */
    display: none;
    background-repeat: no-repeat;
    background-size: 400%;
    /* Increase for higher zoom */
  }

  .product-details {
    text-align: left;
  }

  .wishlist-icon {
    cursor: pointer;
    padding: 5px;
  }
</style>


<script>
  function setMainImage(imageSrc) {
    const mainImage = document.getElementById('mainImage');
    const zoomResult = document.getElementById('zoomResult');
    mainImage.src = imageSrc;
    zoomResult.style.backgroundImage = `url('${imageSrc}')`;
  }

  const zoomLens = document.getElementById('zoomLens');
  const zoomResult = document.getElementById('zoomResult');
  const mainImage = document.getElementById('mainImage');
  const zoomContainer = document.querySelector('.zoom-container');

  zoomContainer.addEventListener('mousemove', (event) => {
    const rect = mainImage.getBoundingClientRect();
    const x = event.pageX - rect.left;
    const y = event.pageY - rect.top;

    const lensWidth = zoomLens.offsetWidth / 2;
    const lensHeight = zoomLens.offsetHeight / 2;

    let lensX = x - lensWidth;
    let lensY = y - lensHeight;

    lensX = Math.max(0, Math.min(lensX, rect.width - zoomLens.offsetWidth));
    lensY = Math.max(0, Math.min(lensY, rect.height - zoomLens.offsetHeight));

    zoomLens.style.left = lensX + 'px';
    zoomLens.style.top = lensY + 'px';

    const backgroundX = (lensX / rect.width) * 100;
    const backgroundY = (lensY / rect.height) * 100;

    zoomResult.style.backgroundPosition = `${backgroundX}% ${backgroundY}%`;
  });

  zoomContainer.addEventListener('mouseleave', () => {
    zoomLens.style.display = 'none';
    zoomResult.style.display = 'none';
  });

  zoomContainer.addEventListener('mouseenter', () => {
    zoomLens.style.display = 'block';
    zoomResult.style.display = 'block';
  });
</script>

<script>
 document.getElementById("addToCart").addEventListener("click", async () => {
  const productId = document.getElementById("addToCart").getAttribute("data-product-id");
  const sizeElement = document.getElementById("size");
  const selectedSize = sizeElement.value; 
  const quantity = parseInt(document.getElementById("quantity").value);

  if (quantity <= 0) {
    return Swal.fire({
      icon: "warning",
      title: "Invalid Quantity",
      text: "Please select a valid quantity.",
    });
  }

  if (!selectedSize) {
    return Swal.fire({
      icon: "warning",
      title: "Invalid Size",
      text: "Please select a size before adding to the cart.",
    });
  }

  addToCart(productId, selectedSize, quantity);
});

async function addToCart(productId, size, quantity) {
  try {
    const stockResponse = await fetch(`/users/product/${productId}/size/${size}`);
    const stockData = await stockResponse.json();

    if (!stockResponse.ok) {
      return Swal.fire({
        icon: "error",
        title: "Stock Error",
        text: stockData.message || "Unable to fetch stock details.",
      });
    }

    const availableStock = stockData.stock; 
    console.log(`Available stock: ${availableStock}, Requested: ${quantity}`);

    if (quantity > availableStock) {
      return Swal.fire({
        icon: "warning",
        title: "Out of Stock",
        text: `Only ${availableStock} items are left for this size.`,
      });
    }

    
    const response = await fetch("/users/cart/add", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ productId, size, quantity }),
    });

    const data = await response.json();

    if (response.ok) {
      Swal.fire({
        icon: "success",
        title: "Added to Cart",
        text: data.message || "Product successfully added to your cart.",
      }).then(()=>location.reload())
    } else {
      Swal.fire({
        icon: "error",
        title: "Error",
        text: data.message || "Unable to add the product to the cart.",
      });
    }
  } catch (error) {
    console.error("Error adding product to cart:", error);
    Swal.fire({
      icon: "error",
      title: "Error",
      text: "An error occurred while adding the product to your cart.",
    });
  }
}

</script>



<script>
  document.addEventListener("DOMContentLoaded",()=>{

  const sizeSelect = document.getElementById("size");
  const sizeInfoDiv = document.getElementById("size-info");
  const selectedSizeElement = document.getElementById("selected-size");
  const selectedStockElement = document.getElementById("selected-stock");

  // Function to update stock info display
  function updateStockInfo() {
    const selectedOption = sizeSelect.options[sizeSelect.selectedIndex];
    const size = selectedOption.value;
    const stock = parseInt(selectedOption.getAttribute("data-stock"));

    selectedSizeElement.textContent = size;

    // Apply the condition for stock
    if (stock > 5) {
      selectedStockElement.textContent = "In Stock";
      selectedStockElement.style.color = "green"; // Green color for in stock
    } else if (stock > 0) {
      selectedStockElement.textContent = `${stock} left`;
      selectedStockElement.style.color = "orange"; // Orange color for limited stock
    } else {
      selectedStockElement.textContent = "Out of Stock";
      selectedStockElement.style.color = "red"; // Red color for out of stock
    }

    sizeInfoDiv.style.display = "block"; // Show the size info div
  }

  // Event listener for size change
  sizeSelect.addEventListener("change", updateStockInfo);

  // Automatically update stock info if there is only one size option
  if (sizeSelect.options.length === 1) {
    updateStockInfo();
  }
  updateStockInfo();

})
</script>



<script>
document.addEventListener('DOMContentLoaded', () => {
    const sizeSelect = document.getElementById('size');
    const actionButton = document.getElementById('actionButton');
    const productId = actionButton.getAttribute('data-product-id');

    const updateButton = (size) => {
        fetch(`/users/product/${productId}/size/${size}`)
            .then(response =>{ 
                console.log(response)
                return response.json()
                 })
            .then(data => 
            {
                console.log(data)
                if (data.stock > 0) {
                    actionButton.textContent = 'Buy Now';
                    actionButton.classList.add('btn-primary');
                    actionButton.classList.remove('btn-secondary');
                    actionButton.disabled = false;
                } else {
                    actionButton.textContent = 'Notify Me';
                    actionButton.classList.add("btn-warning");
                    actionButton.classList.add('btn-secondary');
                    actionButton.classList.remove('btn-primary');
                    actionButton.disabled = false;
                }
            })
            
            .catch(err => {
                console.error('Error fetching stock:', err);
                actionButton.textContent = 'Error';
                actionButton.disabled = true;
            });
            

    };

    updateButton(sizeSelect.value);

    sizeSelect.addEventListener('change', (e) => {
        updateButton(e.target.value);
    });
});


</script>



<%- include("partials/footer") %>