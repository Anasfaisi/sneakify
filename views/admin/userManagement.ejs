<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sneakify - User Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body class="bg-gray-100">
    <%- include("partials/sidebar") %>
    <div class="w-75">
        <!-- Header -->
        <header class="bg-white shadow-sm">
            <div class="d-flex justify-content-between align-items-center px-4 py-3 border-bottom">
                <h1 class="fs-5 fw-semibold">Users</h1>
            </div>
        </header>

        <!-- User Table -->
        <div class="p-4">
            <div class="card">
                <div class="card-body">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th scope="col">S.No</th>
                                <th scope="col">FirstName</th>
                                <th scope="col">LastName</th>
                                <th scope="col">Email</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% users.forEach((user, index) => { %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= user.firstName %></td>
                                <td><%= user.lastName %></td>
                                <td><%= user.email %></td>
                                <td>
                                    <button
                                        id="statusButton"
                                        type="button"
                                        class="btn <%= user.isBlocked ? 'btn-success' : 'btn-danger' %>"
                                        data-user-id="<%= user._id %>"
                                    >
                                        <%= user.isBlocked ? 'Unblock' : 'Block' %>
                                    </button>
                                </td>
                            </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-3">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>&limit=10" class="btn btn-secondary mx-1">&lt; Prev</a>
            <% } %>
        
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a 
                    href="?page=<%= i %>&limit=10" 
                    class="btn <%= i === currentPage ? 'btn-primary' : 'btn-secondary' %> mx-1"
                >
                    <%= i %>
                </a>
            <% } %>
        
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>&limit=10" class="btn btn-secondary mx-1">Next &gt;</a>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.querySelectorAll("#statusButton").forEach((button) => {
            button.addEventListener("click", async (e) => {
                e.preventDefault();

                const buttonElement = e.currentTarget;
                const userId = buttonElement.dataset.userId;
                const isBlocked = buttonElement.classList.contains("btn-success");

                try {
                    const response = await fetch(`/admin/users/${userId}/status`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ isBlocked: !isBlocked }),
                    });

                    const result = await response.json();
                    if (result.success) {
                        buttonElement.classList.toggle("btn-success");
                        buttonElement.classList.toggle("btn-danger");
                        buttonElement.textContent = isBlocked ? "Block" : "Unblock";

                        Swal.fire({
                            icon: "success",
                            title: result.message,
                            showConfirmButton: true,
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: result.message,
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "An error occurred while processing your request.",
                    });
                }
            });
        });
    </script>
</body>
</html>