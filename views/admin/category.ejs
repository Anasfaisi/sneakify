<!-- views/admin/category.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sneakify - Category Management</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body class="bg-gray-100">
    <%-include("partials/sidebar") %>
    <div class="w-75">
      <!-- Header -->
      <header class="bg-white shadow-sm">
        <div class="d-flex justify-content-between align-items-center px-4 py-3 border-bottom">
          <h1 class="fs-5 fw-semibold">Category</h1>
          <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Add New</button>
        </div>
      </header>

      <!-- Add Category Modal -->
      <div id="addCategoryModal" class="modal fade" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Add Category</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <form id="addCategoryForm">
                <div class="mb-3">
                  <label for="addName" class="form-label">Category Name:</label>
                  <input type="text" id="addName" name="name" class="form-control" required pattern="^[A-Za-z\s]+$" title="Only letters and spaces are allowed.">
                  <div id="addNameError" class="form-text text-danger d-none">Category
                    name must be at least 3 characters long</div>
                </div>
                <div class="d-flex justify-content-end">
                  <buttontype="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">
                    Cancel</button>
                    <button type="submit" class="btn btn-primary">Add</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>


      <!-- Edit Category Modal -->
      <div id="editCategoryModal" class="modal fade" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Edit Category</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <form id="editCategoryForm">
                <input type="hidden" id="editCategoryId" name="id">
                <div class="mb-3">
                  <label for="editName" class="form-label">Category Name:</label>
                  <input type="text" id="editName" name="name" class="form-control" required pattern="^[A-Za-z\s]+$" title="Only letters and spaces are allowed.">
                  <div id="editNameError" class="text-danger small mt-1" style="display: none;">
                    Category name must be at least 3 characters long.
                  </div>
                </div>
                <div class="d-flex justify-content-end">
                  <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Cancel</button>
                  <button type="submit" class="btn btn-primary">Save</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>

      <!-- Category Table -->
      <div class="p-4">
        <div class="card">
          <div class="card-body">
            <table class="table table-striped">
              <thead>
                <tr>
                  <th scope="col">Category ID</th>
                  <th scope="col">Name</th>
                  <th scope="col">Actions</th>
                </tr>
              </thead>
              <tbody>
                <% categories.forEach((category, index)=> { %>
                <tr>
                  <td>
                    <%= index + 1 %>
                  </td>
                  <td>
                    <%= category.name %>
                  </td>

                  <td>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editCategoryModal" onclick="populateEditModal('<%= category._id %>','<%= category.name %>')">Edit</button>
                    <form action="/admin/category/<%= category._id %>/<%= category.isActive ? 'deactivate' : 'activate' %>" method="POST" style="display: inline;">
                      <button type="submit" class="btn <%= category.isActive ? 'btn-danger' : 'btn-success' %>">
                        <%= category.isActive ? 'deactivate' : 'Activate' %>
                      </button>
                    </form>
                  </td>
                </tr>
                <% }); %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
    <script>
      document.getElementById('addCategoryForm').addEventListener('submit', async function(event) {
        event.preventDefault(); // Prevent default form submission
        
        const nameInput = document.getElementById('addName');
        const nameError = document.getElementById('addNameError');
        const name = nameInput.value.trim();
        const isValidName = /^[A-Za-z\s]+$/.test(name);
        
        // Validation: Check name length and format
      if (name.length < 3 || !isValidName) {
        nameError.style.display = 'block';
        nameError.textContent = "Category name must be at least 3 characters long and contain only letters and spaces.";
        return;
      } else {
        nameError.style.display = 'none';
      }
      
      try {
        // Send POST request to the server
        const response = await fetch('/admin/category/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            name
          }),
        });
        
        const data = await response.json();
        
        if (response.ok) {
          // Success: Close modal and show success message
          const modal = bootstrap.Modal.getInstance(document.getElementById('addCategoryModal'));
          modal.hide(); // Use Bootstrap's modal method to hide the modal
          
          Swal.fire({
            icon: "success",
            title: "Success!",
            text: data.message || "Category added successfully.",
          });
          
          // Reload page after 1.5 seconds
          setTimeout(() => {
            location.reload();
          }, 1500);
        } else {
          // Error response from the server
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: data.message || "Failed to add category.",
          });
        }
      } catch (error) {
        console.error('Error:', error);
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "Something went wrong. Please try again.",
        });
      }
    });
    
    
    function populateEditModal(id, name) {
      document.getElementById("editCategoryId").value = id
      document.getElementById('editName').value = name;
    }
    let dd = document.getElementById("editCategoryId")
    console.log(dd);
    document.getElementById('editCategoryForm').addEventListener('submit', async function(event) {
      console.log("hsaaai");
      event.preventDefault(); 
      
      const id = document.getElementById('editCategoryId').value;
      console.log(id);
      const name = document.getElementById('editName').value.trim();
      const nameError = document.getElementById('editNameError');
      const isValidName = /^[A-Za-z\s]+$/.test(name);
      
      // Validation
      if (name.length < 3 || !isValidName) {
        nameError.style.display = 'block';
        nameError.textContent = "Category name must be at least 3 characters long and contain only letters and spaces.";
        return;
      } else {
        nameError.style.display = 'none';
      }

      try {
        // Send POST request to update the category
        const response = await fetch(`/admin/category/edit/${id}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            name
          }),
        });
        
        const data = await response.json();
        console.log(data);
        if (response.ok) {
          
          const modal = bootstrap.Modal.getInstance(document.getElementById('editCategoryModal'));
          modal.hide(); 
          
          Swal.fire({
            icon: "success",
            title: "Success!",
            text: data.message || "Category updated successfully.",
          });
          
          // Reload page after 1.5 seconds
          setTimeout(() => {
            location.reload();
          }, 1500);
        } else {
          // Error response from the server
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: data.message || "Failed to update category.",
          });
        }
      } catch (error) {
        // Handle unexpected errors
        console.error('Error:', error);
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "Something went wrong. Please try again.",
        });
      }
    });
  </script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>