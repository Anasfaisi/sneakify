<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sneakify - Order Management</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  

  <style>
    .pagination {
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

.page-item {
  margin: 0 5px;
}

.page-link {
  display: inline-block;
  padding: 10px 15px;
  color: #007bff;
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 5px;
  text-decoration: none;
  font-weight: bold;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.page-link:hover {
  background-color: #007bff;
  color: #fff;
}

.page-item.active .page-link {
  background-color: #007bff;
  color: #fff;
}

.page-item.disabled .page-link {
  color: #ddd;
  pointer-events: none;
}

.page-item a {
  text-align: center;
  line-height: 1;
}

.page-item:not(.disabled):not(.active) .page-link {
  cursor: pointer;
}

.page-item a:hover {
  color: #fff;
  text-decoration: none;
}

  </style>
</head>

<body class="bg-gray-100">
  <%- include("partials/sidebar") %>
  <div class="w-75">
    <!-- Header -->
    <header class="bg-white shadow-sm">
      <div class="d-flex justify-content-between align-items-center px-4 py-3 border-bottom">
        <h1 class="fs-5 fw-semibold">Orders</h1>
        <!-- Notification Bell Icon -->
        <div class="position-relative">
          <button class="btn btn-light" data-bs-toggle="modal" data-bs-target="#notificationModal">
            <i class="bi bi-bell">Notification</i>
            <% if (notifications && notifications.length > 0) { %>
              <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                <%= notifications.length %>
              </span>
            <% } %>
          </button>
        </div>
      </div>
    </header>
    <!-- Orders Table -->
    <div class="p-4">
      <div class="card">
        <div class="card-body">
          <table class="table table-striped">
            <thead>
              <tr>
                <th scope="col">Order ID</th>
                <th scope="col">User Email</th>
                <th scope="col">Order Status</th>
                <th scope="col">Total Amount</th>
                <th scope="col">Date Ordered</th>
                <th scope="col">Actions</th>
              </tr>
            </thead>
            <tbody>
              <% orders.forEach((order) => { %>
                <tr>
                  <td><%= order.orderId %></td>
                  <td><%= order.userId.email %></td> 
                  <td><%= order.status.charAt(0).toUpperCase() + order.status.slice(1) %></td>
                  <td>â‚¹<%= order.grandTotal.toFixed(2) %></td>
                  <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                  <td>
                    <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#viewOrderModal" onclick="viewOrderDetails('<%= order._id %>')">View Details</button>
                    <td>
                      <button class="btn btn-success btn-sm"style="display: inline;" onclick="updateOrderStatus('<%= order._id %>','<%= order.status %>')">Update Status</button>
                      </td>
                    
                    
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <div class="modal fade" id="notificationModal" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="notificationModalLabel">Notifications</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <% if (notifications && notifications.length > 0) { %>
              <ul class="list-group">
                <% notifications.forEach((notification) => { %>
                  <li class="list-group-item">
                    <div class="d-flex flex-column">
                      <!-- Notification Message -->
                      <div class="d-flex justify-content-between align-items-center mb-2">
                        <span><strong>Message:</strong> <%= notification.message %></span>
                        <button class="btn btn-primary btn-sm" id="viewButton" value="<%= notification.orderId.status %>" 
                          onclick='handleNotification("<%= notification.orderId._id %>", "<%= notification._id %>")'>
                          View
                        </button>
                      </div>
          
                      <!-- Cancellation Reason -->
                      <% if (notification.cancelReason) { %>
                        <div class="alert alert-warning p-2">
                          <strong>Cancel Reason:</strong> <%= notification.cancelReason %>
                        </div>
                      <% } %>
                    </div>
                  </li>
                <% }); %>
              </ul>
            <% } else { %>
              <p class="text-muted">No new notifications.</p>
            <% } %>
          </div>
          
        </div>
      </div>
    </div>
  </div>

    <!-- View Order Modal -->
    <div id="viewOrderModal" class="modal fade" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Order Details</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div id="orderDetails"></div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="pagination">
    <% if (currentPage > 1) { %>
      <div class="page-item">
        <a href="/admin/orders?page=<%= currentPage - 1 %>" class="page-link">Previous</a>
      </div>
    <% } else { %>
      <div class="page-item disabled">
        <span class="page-link">Previous</span>
      </div>
    <% } %>

    <% for (let i = 1; i <= totalPages; i++) { %>
      <div class="page-item <%= currentPage === i ? 'active' : '' %>">
        <a href="/admin/orders?page=<%= i %>" class="page-link"><%= i %></a>
      </div>
    <% } %>

    <% if (currentPage < totalPages) { %>
      <div class="page-item">
        <a href="/admin/orders?page=<%= currentPage + 1 %>" class="page-link">Next</a>
      </div>
    <% } else { %>
      <div class="page-item disabled">
        <span class="page-link">Next</span>
      </div>
    <% } %>
  </div>
</div>

<script>
  function viewOrderDetails(orderId) {
    fetch(`/admin/orderDetails/${orderId}`)
      .then(response => response.json())
      .then(data => {
        console.log(data._id);
        const orderDetails = document.getElementById('orderDetails');

        // Check if the status is "cancelled" or "returned"
        const cancelReasonHTML =
          (data.status === "cancelled" || data.status === "returned") && data.cancelReason
            ? `<p><strong>Cancel Reason:</strong> ${data.cancelReason}</p>`
            : "";

        orderDetails.innerHTML = `
          <p><strong>Order ID:</strong> ${data.orderId}</p>
          <p><strong>User Name:</strong> ${data.userId.firstName}</p>
          <p><strong>Order Status:</strong> ${data.status}</p>
          ${cancelReasonHTML} <!-- Conditionally added cancel reason -->
          <p><strong>Payment Method:</strong> ${data.paymentMethod}</p>
          <p><strong>Products:</strong></p>
          <ul>
            ${data.products
              .map(
                product => `
                <li>${product.name} - $${product.price} x ${product.quantity} (Total: $${product.total})</li>
              `
              )
              .join("")}
          </ul>
          <p><strong>Total Amount:</strong> $${data.grandTotal.toFixed(2)}</p>
          <p><strong>Address:</strong> ${data.addressDetails.address}, ${data.addressDetails.city}, ${data.addressDetails.state}, ${data.addressDetails.country} - ${data.addressDetails.pincode}</p>
        `;
      })
      .catch(error => {
        console.error("Error fetching order details:", error);
      });
  }
</script>

<script>
  function updateOrderStatus(orderId, currentStatus) {
    // Check if the status is already "final" (e.g., Delivered, Cancelled)
    const finalStatuses = ['delivered', 'cancelled' ,'returned','shipped'];

    if (finalStatuses.includes(currentStatus)) {
      Swal.fire({
        icon: 'info',
        title: 'Action Not Allowed',
        text: `The order has already been marked as "${currentStatus}" and cannot be updated.`,
      });
      return;
    }

    Swal.fire({
      title: 'Update Order Status',
      input: 'select',
      inputOptions: {
        pending: 'Pending',
        shipped: 'Shipped',
        delivered: 'Delivered',
        cancelled: 'Cancelled'
      },
      inputPlaceholder: 'Select a new status',
      showCancelButton: true,
      confirmButtonText: 'Update',
      preConfirm: (newStatus) => {
        if (!newStatus) {
          Swal.showValidationMessage('You need to select a status!');
        }
        return newStatus;
      }
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/admin/orders/${orderId}/status`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ status: result.value })
        })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            Swal.fire('Updated!', 'Order status updated successfully.', 'success').then(() => {
              location.reload(); // Reload the page to reflect changes
            });
          } else {
            Swal.fire('Error!', data.message || 'Something went wrong.', 'error');
          }
        })
        .catch((error) => {
          console.error('Error updating status:', error);
          Swal.fire('Error!', 'Failed to update the order status.', 'error');
        });
      }
    });
  }
</script>


<script>
 async function handleNotification(orderId,notificationId) {
    const viewButton = document.getElementById("viewButton").value
    const action = viewButton === "cancel_requested"?'cancel':"return";
    console.log(action);
  try {
    const result = await Swal.fire({
      title: 'Approve or Reject Cancellation',
      text: "Do you want to approve this cancellation?",
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: 'Approve',
      cancelButtonText: 'Reject',
    });

    if (result.isConfirmed) {
      try {
        const response = await fetch(`/admin/orders/${orderId}/${action}`, { method: 'POST' ,
          headers:{"content-Type":"application/json"},
          body:JSON.stringify({orderId,notificationId})
        });
        console.log(response)
        const data = await response.json();
        console.log(data)
        if (response.ok) {
          Swal.fire('Approved!', data.message, 'success').then(()=>location.reload())
        } else {
          throw new Error(data.message || 'Failed to approve the cancellation.');
        }
      } catch (error) {
        console.error('Error:', error);
        Swal.fire('Error!', error.message || 'Something went wrong.', 'error');
      }
    } else if (result.dismiss === Swal.DismissReason.cancel) {
      Swal.fire('Rejected', 'The cancellation request has been rejected.', 'error');
    }
  } catch (error) {
    console.error('Error in Swal dialog:', error);
    Swal.fire('Error!', 'An unexpected error occurred.', 'error');
  }
}

</script>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>
